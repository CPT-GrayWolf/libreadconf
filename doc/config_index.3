.TH CONFIG_INDEX 3  "28 August 2020" "" "libreadconf Manual"
.SH NAME
config_index, config_index_br \- get a configuration key by array index
.SH SYNOPSIS
.nf
.B #include <libreadconf.h>
.PP
.BI "int config_index(CONFIG *" cfg ", char *" name ", char *" data_buff ", unsigned int " buff_size ", unsigned in " index ");
.PP 
.BI "int config_index_br(CONFIG *" cfg ", char **" name ", char **" data ", unsigned int " index ");
.ll -8
.br
.SH DESCRIPTION
.SS config_index()
This function gets a key from the keylist of
.I cfg
at the position
.I index, 
returning the key name of max length CONFIG_MAX_KEY via
.I name
and returning its value via the buffer
.I data_buff.
.\"
.SS config_index_br()
This function is the same as
.BR config_index()
but returns the values of
.I name
and
.I data
by-reference.
.\"
.SH RETURN VALUE
.SS config_index()
Upon successful completion,
.BR config_index()
returns 1. The name of the key at position
.I index
in the keylist of
.I cfg
will be returned via
.I name
with a max length of CONFIG_MAX_KEY. Any extra characters will be silently truncated.
.PP
The value of the key will be returned via
.I data_buff.
If the length of the value of the next key is greater than
.I buff_size
the data written to
.I data_buff
is truncated to the length of
.I buff_size,
and the function returns the length of the uncoppied data + 1.
.PP
If the value of the key
.I index 
is empty, 
.I data_buff
will be set to an empty string. If 
.I index
exists, but is not a key,
.I data_buff 
will contain a newline.
.PP
If
.I index
is greater than the number of elements in the keylist
.BR config_index()
returns 0, and 
.I name
and
.I data_buff
are set to empty strings.
.PP
On error,
.BR config_index()
returns -1, and (hopefully) sets
.I errno
to a value indicating the error.
.\"
.SS config_index_br()
On sucsessful completion,
.BR config_index_br()
returns 1, and
.I name
and
.I data
are set to point to the name and value of key
.I index 
in the keylist of
.I cfg.
.PP
If item
.I index
exists but is not a valid key,
.I data
will contain a newline.
.PP
If
.I index
is greater than the number of items in the keylist,
.BR config_index_br()
returns 0, and
.I name
and
.I data
will be NULL.
.PP
On error,
.I name
and
.I data
will be set to NULL,
.BR config_index_br
returns -1, and
.I errno
will (hopefully) be set to a value indicating the error.
.\"
.SH ERRORS
.PP
Both 
.BR config_index(), 
and
.BR config_index_br()
functions may fail and set 
.I errno 
for any of the errors specified for the routine 
.BR pthread_sigmask(3).
.PP
In the event that
.I cfg,
or any of its data are not valid, both
.BR config_index(),
and
.BR config_index_br()
may also set
.I errno
to
.I EINVAL.
.SH NOTES
.SS config_index() notes.
The
.BR config_index()
functions do not affect, and are not affected by, the current keylist position of
.I cfg.
.\"
.SS libreadconf notes.
See 
.BR libreadconf(3)
for more information. 
.SH SEE ALSO
.BR config_open(3),
.BR config_read(3),
.BR config_close(3),
.BR config_rewind(3),
.BR config_search(3),
.BR config_next(3),
.BR config_search_br(3),
.BR config_next_br(3),
.BR libreadconf(3).
.SH COPYRIGHT
Copyright \(co 2020 Ian "Luna" Ericson and the Finity Software Group.
